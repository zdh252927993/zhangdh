spring:
  profiles:
    active: dev
  main:
    allow-bean-definition-overriding: true
    allow-circular-references: true
  cache:
    redis:
      key-prefix: zhangdh#
  cloud:
    nacos:
      # 配置中心
      config:
        group: ZHANGDH
        # 这个就表示 在我们nacos命名空间id为 dev中 有一个data-id 为 demo-service.yml 的配置文件 读取这个里面的配置
        file-extension: yml
        config-retry-time: 300000


mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

#server:
#  servlet:
#    context-path:

logging:
  config: ./config/run/logback-spring.xml
  file:
    path: ./logs/${spring.application.name}
  level:
    root: info
  logback:
    rollingpolicy:
      max-file-size: 500MB
      max-history: 30
      total-size-cap: 20GB

#ribbon，负载均衡
ribbon:
  ReadTimeout: 5000
  ConnectTimeout: 5000

# 暴露所有监控信息为HTTP
#management:
#  endpoints:
#    # 默认开启所有监控端点信息
#    enabled-by-default: true
#    web:
#      exposure:
#        # 以web方式暴露所有端点
#        include: '*'
dubbo:
  application:
    name: dubbo-${spring.application.name}
  protocol:
    name: dubbo
    port: -1
  #    name: http
  #    server: servlet
  #    port: ${server.port}
  #    contextpath: ${server.servlet.context-path}/dubbo
  registry:
    #    username: nacos
    #    password: nacos
    address: nacos://${spring.cloud.nacos.config.server-addr}
    parameters:
      namespace: ${spring.cloud.nacos.config.namespace}
#坑，group加了就获取不到provider，consumer与provider对于group的处理不同
#    group: test
#启动检查provider接口是否存在，接口单独定义，整体需要检查减少错误
#  consumer:
#    check: false

--- #分割线，代表着线以上是一个环境，线以下是一个环境
spring:
  config:
    activate:
      on-profile: dev #开发环境
  cloud:
    nacos:
      # 配置中心
      config:
        # 命名空间id(此处不用public,因public初始化的空间, id为空)
        namespace: eb6f838d-7f19-411a-86bd-b651beeffa7d
        # nacos的ip地址和端口 120.79.64.17:10848
        server-addr: 10.50.100.135:30000